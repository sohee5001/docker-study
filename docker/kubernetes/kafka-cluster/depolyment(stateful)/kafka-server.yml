apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: kafka
    chart: kafka-0.1.0
    heritage: Tiller
  name: kafka-server
  namespace: so-kafka
  selfLink: /apis/apps/v1/namespaces/kafka/statefulsets/kafka-server

spec:
  podManagementPolicy: OrderedReady   # 기동 순서 조작 1.OrderedReady(default) :  statefulset으로 pod를 생성하면 순차적으로 기동되고 순차적(역순)으로 삭제된다. 2. Parallel : 병렬로 동시에 모든 pod를 기동 및 삭제
  replicas: 1
  selector:
    matchLabels:
      app: kafka
  serviceName: kafka-sever-headless
  template:
    metadata:
      labels:
        app: kafka
    spec:
      affinity:
        podAntiAffinity:      #  포드를 동일한 위치(노드)에 놓고 싶지 않을때 사용. 하위에 labelSelector로 지정한 것이 동일한 시스템(노드)으로 스케줄 되서는 안된다.
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - kafka
                topologyKey: kubernetes.io/hostname    # 포드가 배포되지 않거나 배포되어야 하는 범위를 결정.
            weight: 1           # 우선순위 설정 바로 위에 조건문 중에서 먼저 적용시킬거가 무엇인지. (1~100까지 설정 가능)
      containers:
        - command:
            - sh
            - -exc
            - |
              unset KAFKA_PORT && \
              export KAFKA_BROKER_ID=${HOSTNAME##*-} && \
              export KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://${POD_NAME}.rnd-kafka-headless.${POD_NAMESPACE}:9092,EXTERNAL://${HOST_IP}:$((31090 + ${KAFKA_BROKER_ID})) && \
              exec /etc/confluent/docker/run
        - env:
#            - name: KAFKA_ADVERTISED_LISTENERS
#              value: PLAINTEXT://kafka-server-0.kafka-server.kafka:9192,EXTERNAL://kafka-server-0.kafka-server.kafka:9092
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "false"
            - name: KAFKA_DEFAULT_REPLICATION_FACTOR
              value: 1
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
            - name: KAFKA_NUM_PARTITIONS
              value: 1
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: 1
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-server-0.zookeeper-server.kafka:2181
            - name: POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.hostIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
          image: confluentinc/cp-kafka:5.3.1
          imagePullPolicy: IfNotPresent      # 이미지가 이미 존재하면 계속 사용한다.   그렇기에 pod재시작을 하지 않고 있고. tag 사용시 좋음. 그게 아니라면 always로 변경하는게 좋음.
          name: kafka-server
          ports:
            - containerPort: 9092
              name: kafka
              protocol: TCP
  updateStrategy:
    type: RollingUpdate